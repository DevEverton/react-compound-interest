{"version":3,"sources":["styles/styles.module.css","components/Input.js","components/Installment.js","helpers/Calculation.js","App.js","index.js"],"names":["module","exports","Input","min","max","value","id","label","onInputChange","className","style","fontWeight","type","onChange","event","newValue","target","htmlFor","Installment","addedValue","percentage","useState","colors","setColors","useEffect","colorPicker","parseFloat","css","installmentContainer","backgroundColor","installmentIndex","installmentValues","color","localCurrency","toLocaleString","currency","App","currentValue","setCurrentValue","interest","setInterest","period","setPeriod","installmentsData","setInstallmentsData","installmentsElements","setInstallmentsElements","calculatedValues","initial","result","currentPercentage","addedAmount","sign","calculate","calculatePercentage","added","i","toFixed","calculateValues","elements","push","key","getInstallmentsElements","handleInputChange","header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2cc9318.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__1boEg\",\"installmentContainer\":\"styles_installmentContainer__3Rt61\",\"installmentValues\":\"styles_installmentValues__ZrHFG\",\"installmentIndex\":\"styles_installmentIndex__AIlNx\"};","import React from \"react\";\n\nexport default function Input({ min, max, value, id, label, onInputChange }) {\n  const handleInputChange = (event) => {\n    const newValue = event.target.value;\n    const id = event.target.id;\n    onInputChange(newValue, id);\n  };\n\n  return (\n    <div className=\"input-field\">\n      <input\n        style={{ fontWeight: \"200\" }}\n        type=\"number\"\n        value={value}\n        min={min}\n        max={max}\n        id={id}\n        onChange={handleInputChange}\n      />{\" \"}\n      <label className=\"active\" htmlFor={id}>\n        {label}\n      </label>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport css from \"../styles/styles.module.css\";\n\nexport default function Installment({ id, value, addedValue, percentage }) {\n  const [colors, setColors] = useState({});\n\n  useEffect(() => {\n    const colorPicker = {\n      negative: {\n        value: \"#eb7077\",\n        percentage: \"tomato\",\n      },\n      positive: {\n        value: \"#25a69a\",\n        percentage: \"#37A0D0\",\n      },\n    };\n    if (parseFloat(percentage) < 0) {\n      setColors(colorPicker.negative);\n    } else {\n      setColors(colorPicker.positive);\n    }\n  }, [percentage]);\n\n  return (\n    <div className={css.installmentContainer}>\n      <span\n        style={{ backgroundColor: `${colors.value}` }}\n        className={css.installmentIndex}\n      >\n        {id}\n      </span>\n\n      <div className={css.installmentValues}>\n        <span style={{ color: `${colors.value}` }}>{value}</span>\n        <span style={{ color: `${colors.value}` }}>{addedValue}</span>\n        <span style={{ color: `${colors.percentage}` }}>{percentage}</span>\n      </div>\n    </div>\n  );\n}\n","function calculateValues(initial, interest, period) {\n  let result = {};\n  let currentValue = initial;\n  let currentPercentage = 0;\n  let addedAmount = 0;\n  let sign = interest > 0 ? \"+\" : \"\";\n\n  const calculate = (initial, interest) => initial * (1 + interest / 100);\n  const calculatePercentage = (initial, added) => (added * 100) / initial;\n\n  for (let i = 1; i <= period; i++) {\n    addedAmount += calculate(currentValue, interest) - currentValue;\n    currentValue = calculate(currentValue, interest);\n    currentPercentage = calculatePercentage(initial, addedAmount);\n\n    result[i] = [\n      localCurrency(currentValue),\n      `${sign}${localCurrency(addedAmount)}`,\n      `${currentPercentage.toFixed(2)}%`,\n    ];\n  }\n\n  return result;\n}\n\nfunction localCurrency(value) {\n  return value.toLocaleString(\"pt-br\", { style: \"currency\", currency: \"BRL\" });\n}\n// console.log(calculateValues(5900, 0.8, 12));\nexport { calculateValues };\n","import React, { useState, useEffect } from \"react\";\nimport Input from \"./components/Input\";\nimport css from \"./styles/styles.module.css\";\nimport Installment from \"./components/Installment\";\nimport { calculateValues } from \"./helpers/Calculation.js\";\n\nexport default function App() {\n  const [currentValue, setCurrentValue] = useState(\"\");\n  const [interest, setInterest] = useState(\"\");\n  const [period, setPeriod] = useState(\"\");\n  const [installmentsData, setInstallmentsData] = useState({});\n  const [installmentsElements, setInstallmentsElements] = useState([]);\n\n  useEffect(() => {\n    let internalCurrentValue =\n      currentValue === \"\" ? 0 : parseFloat(currentValue);\n    let internalInterest = interest === \"\" ? 0 : parseFloat(interest);\n    let internalPeriod = period === \"\" ? 0 : parseFloat(period);\n\n    const calculatedValues = calculateValues(\n      internalCurrentValue,\n      internalInterest,\n      internalPeriod\n    );\n    setInstallmentsData(calculatedValues);\n  }, [currentValue, interest, period]);\n\n  useEffect(() => {\n    const getInstallmentsElements = () => {\n      if (installmentsData === {}) {\n        return;\n      }\n      let elements = [];\n\n      for (let i = 1; i <= period; i++) {\n        elements.push(\n          <div key={i} className=\"col l3 s6\">\n            <Installment\n              id={i}\n              value={installmentsData[i][0]}\n              addedValue={installmentsData[i][1]}\n              percentage={installmentsData[i][2]}\n            />\n          </div>\n        );\n      }\n      return elements;\n    };\n\n    setInstallmentsElements(getInstallmentsElements());\n  }, [installmentsData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleInputChange = (newValue, id) => {\n    switch (id) {\n      case \"IV\":\n        setCurrentValue(newValue);\n        break;\n      case \"IR\":\n        setInterest(newValue);\n        break;\n      case \"P\":\n        setPeriod(newValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <h2 style={{ fontWeight: \"200\" }} className={css.header}>\n        React - Juros Compostos\n      </h2>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col l4 s12\">\n            <Input\n              id={\"IV\"}\n              label={\"Montante Inicial:\"}\n              value={currentValue}\n              min={0}\n              max={100000}\n              onInputChange={handleInputChange}\n            />\n          </div>\n          <div className=\"col l4 s12\">\n            <Input\n              id={\"IR\"}\n              label={\"Taxa de juros mensal:\"}\n              value={interest}\n              min={-12}\n              max={12}\n              onInputChange={handleInputChange}\n            />\n          </div>\n          <div className=\"col l4 s12\">\n            <Input\n              id={\"P\"}\n              label={\"Período (meses):\"}\n              value={period}\n              min={0}\n              max={36}\n              onInputChange={handleInputChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">{installmentsElements}</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}